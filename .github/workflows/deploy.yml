name: Deploy to EC2

on:
  push:
    branches: [main]
  workflow_dispatch: # ÏàòÎèô Ïã§Ìñâ Î≤ÑÌäº ‚ú®

env:
  IMAGE_NAME: dustin-chain
  REGISTRY: ghcr.io
  OWNER: gihoon1123

jobs:
  deploy:
    name: üöÄ Build & Deploy
    runs-on: ubuntu-latest
    environment: production # ÏàòÎèô ÏäπÏù∏ ÌïÑÏöî ‚úã
    permissions:
      contents: read
      packages: write

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üê≥ Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üî® Build & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üöÄ Deploy to EC2
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          IMAGE: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          ssh $USER@$HOST << EOF
            set -e
            echo "üîê Docker login..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            echo "üì• Pull image..."
            docker pull $IMAGE
            
            echo "üõë Stop old container..."
            docker stop dustin-chain-app 2>/dev/null || true
            docker rm dustin-chain-app 2>/dev/null || true
            
            echo "üöÄ Start new container..."
            mkdir -p /var/dustin-chain/data
            mkdir -p /var/dustin-chain/config
            docker run -d \
              --name dustin-chain-app \
              --restart unless-stopped \
              -p 3000:3000 \
              -v /var/dustin-chain/data:/app/data \
              -v /var/dustin-chain/config/genesis.json:/app/genesis.json \
              -v /var/dustin-chain/config/genesis-accounts.json:/app/genesis-accounts.json \
              -e NODE_ENV=production \
              $IMAGE
            
            echo "‚è≥ Health check..."
            sleep 10
            for i in {1..10}; do
              if curl -f http://localhost:3000/api > /dev/null 2>&1; then
                echo "‚úÖ Deployed successfully!"
                exit 0
              fi
              echo "Waiting... (\$i/10)"
              sleep 3
            done
            
            echo "‚ùå Health check failed"
            docker logs --tail 30 dustin-chain-app
            exit 1
          EOF
